---
scopeName: source.d
name: D
fileTypes:
- d
- di
firstLineMatch: "#!.*rdmd"
foldingStartMarker: "\\{"
foldingStopMarker: "\\}"
patterns:
- match: "\\b(module)\\s+([^;]+)"
  captures:
    '1':
      name: storage.type.module.d
    '2':
      name: entity.name.namespace.d
- begin: "\\b(import)\\s*\\("
  end: "\\)"
  beginCaptures:
    '1':
      name: keyword.control.import.d
  patterns:
  - include: "$self"
- begin: "\\b(import)\\b(?!\\s*\\})"
  end: ";"
  beginCaptures:
    '1':
      name: keyword.control.import.d
  endCaptures:
    '0':
      name: punctuation.terminator.d
  patterns:
  - name: keyword.operator.assignment.d
    match: "="
  - name: punctuation.accessor.d
    match: ":"
  - name: punctuation.separator.d
    match: ","
  - include: "#import-support"
  - name: entity.name.namespace.d
    match: "\\b\\w+\\.[\\w.]+\\b"
  - name: entity.name.d
    match: "\\b[\\w.]+\\b"
- contentName: meta.parens.d
  begin: "\\b(pragma)\\s*(\\()(\\s*\\w+)"
  end: "\\)"
  beginCaptures:
    '1':
      name: keyword.other.d
    '2':
      name: punctuation.section.parens.begin.d
    '3':
      name: meta.parens.d
      patterns:
      - name: support.constant.pragma.d
        match: "\\b(inline|lib|linkerDirective|mangle|msg|startaddress)\\b"
  endCaptures:
    '0':
      name: punctuation.section.parens.end.d
  patterns:
  - include: "$self"
- match: "\\b(version)\\s*(\\()(\\s*\\w+\\s*)(\\))"
  captures:
    '1':
      name: keyword.control.branch.version.d
    '2':
      name: punctuation.section.parens.begin.d
    '3':
      name: meta.parens.d
      patterns:
      - name: support.constant.version.d
        match: "\\b(?:DigitalMars|GNU|LDC|SDC|Windows|Win32|Win64|linux|OSX|FreeBSD|OpenBSD|NetBSD|DragonFlyBSD|BSD|Solaris|Posix|AIX|Haiku|SkyOS|SysV3|SysV4|Hurd|Android|Emscripten|PlayStation|PlayStation4|Cygwin|MinGW|FreeStanding|CRuntime_Bionic|CRuntime_DigitalMars|CRuntime_Glibc|CRuntime_Microsoft|CRuntime_Musl|CRuntime_UClibc|CppRuntime_Clang|CppRuntime_DigitalMars|CppRuntime_Gcc|CppRuntime_Microsoft|CppRuntime_Sun|X86|X86_64|ARM|ARM_Thumb|ARM_SoftFloat|ARM_SoftFP|ARM_HardFloat|AArch64|AsmJS|Epiphany|PPC|PPC_SoftFloat|PPC_HardFloat|PPC64|IA64|MIPS32|MIPS64|MIPS_O32|MIPS_N32|MIPS_O64|MIPS_N64|MIPS_EABI|MIPS_SoftFloat|MIPS_HardFloat|NVPTX|NVPTX64|RISCV32|RISCV64|SPARC|SPARC_V8Plus|SPARC_SoftFloat|SPARC_HardFloat|SPARC64|S390|SystemZ|HPPA|HPPA64|SH|WebAssembly|Alpha|Alpha_SoftFloat|Alpha_HardFloat|LittleEndian|BigEndian|ELFv1|ELFv2|D_BetterC|D_Exceptions|D_ModuleInfo|D_TypeInfo|D_Coverage|D_Ddoc|D_InlineAsm_X86|D_InlineAsm_X86_64|D_LP64|D_X32|D_HardFloat|D_SoftFloat|D_PIC|D_SIMD|D_AVX|D_AVX2|D_Version2|D_NoBoundsChecks|D_ObjectiveC|Core|Std|unittest|assert|none|all)\\b"
      - name: invalid.deprecated.version.d
        match: "\\b(?:darwin|Thumb|S390X)\\b"
      - name: constant.other.version.d
        match: "\\b(\\w+)\\b"
      - name: punctuation.section.parens.begin.d
        match: "\\("
      - name: punctuation.section.parens.end.d
        match: "\\)"
    '4':
      name: punctuation.section.parens.end.d
- match: "\\b(class)\\s+(\\w+)"
  captures:
    '1':
      name: storage.type.class.d
    '2':
      name: entity.name.class.d
- match: "\\b(interface)\\s+(\\w+)(?:\\s*:\\s*(\\w+))?"
  captures:
    '1':
      name: storage.type.interface.d
    '2':
      name: entity.name.interface.d
    '3':
      name: entity.other.inherited-class.interface.d
- match: "\\b(struct)\\s+(\\w+)?"
  captures:
    '1':
      name: storage.type.struct.d
    '2':
      name: entity.name.struct.d
- match: "\\b(union)\\s+(\\w+)?"
  captures:
    '1':
      name: storage.type.union.d
    '2':
      name: entity.name.union.d
- match: "\\b(enum)\\s+(?:(\\w+)\\s+(\\w+)|(\\w+)?)"
  captures:
    '1':
      name: storage.type.enum.d
    '2':
      patterns:
      - include: "$self"
    '3':
      name: entity.name.enum.d
    '4':
      name: entity.name.enum.d
- contentName: meta.parens.d
  begin: "\\b(extern)\\s*(\\()(\\s*(C\\+\\+)\\s*)(?=,|\\)|$)"
  end: "\\)"
  beginCaptures:
    '1':
      name: storage.modifier.d
    '2':
      name: punctuation.section.parens.begin.d
    '3':
      name: meta.parens.d
    '4':
      name: constant.other.linkage.d
    '5':
      name: punctuation.separator.d
  endCaptures:
    '0':
      name: punctuation.section.parens.end.d
  patterns:
  - name: punctuation.separator.d
    match: ","
  - name: entity.name.namespace.d
    match: "[\\w.]+"
  - include: "#string-literal"
- match: "\\b(extern)\\s*(\\()(\\s*(C|D|Objective-C|Pascal|System|Windows)|([^\\)]+)\\s*)(\\))"
  captures:
    '1':
      name: storage.modifier.d
    '2':
      name: punctuation.section.parens.begin.d
    '3':
      name: meta.parens.d
    '4':
      name: constant.other.linkage.d
    '5':
      name: invalid.illegal.d
    '6':
      name: punctuation.section.parens.end.d
- match: "\\b(scope)\\s*(\\()((?:\\s*(exit|failure|success)\\s*)|([^\\)]+))(\\))"
  captures:
    '1':
      name: keyword.control.d
    '2':
      name: punctuation.section.parens.begin.d
    '3':
      name: meta.parens.d
    '4':
      name: constant.language.scope.d
    '5':
      name: invalid.illegal.d
    '6':
      name: punctuation.section.parens.begin.d
- begin: "\\b(asm)\\b(?!\\s*\\})([^\\{]*)"
  end: "\\}"
  beginCaptures:
    '1':
      name: keyword.control.d
    '2':
      patterns:
      - include: "$self"
  endCaptures:
    '0':
      name: punctuation.section.block.end.d
  patterns:
  - name: punctuation.section.block.begin.d
    match: "\\{"
  - include: "#inline-assembly"
- contentName: meta.parens.d
  begin: "\\b(__traits)\\s*(\\()\\s*((isAbstractClass|isArithmetic|isAssociativeArray|isFinalClass|isPOD|isNested|isFuture|isDeprecated|isFloating|isIntegral|isScalar|isStaticArray|isUnsigned|isDisabled|isVirtualFunction|isVirtualMethod|isAbstractFunction|isFinalFunction|isStaticFunction|isOverrideFunction|isTemplate|isRef|isOut|isLazy|isReturnOnStack|isZeroInit|hasMember|identifier|getAliasThis|getAttributes|getFunctionAttributes|getFunctionVariadicStyle|getLinkage|getMember|getOverloads|getParameterStorageClasses|getPointerBitmap|getProtection|getTargetInfo|getVirtualFunctions|getVirtualMethods|getUnitTests|parent|classInstanceSize|getVirtualIndex|allMembers|derivedMembers|isSame|compiles)|(\\w+))\\b"
  end: "\\)"
  beginCaptures:
    '1':
      name: keyword.other.d
    '2':
      name: punctuation.section.parens.begin.d
    '3':
      name: meta.parens.d
    '4':
      name: support.constant.trait.d
    '5':
      name: constant.language.trait.d
  endCaptures:
    '0':
      name: punctuation.section.parens.end.d
  patterns:
  - include: "$self"
- name: comment.line.number-sign.shebang.d
  match: "\\A(#!).+"
  captures:
    '1':
      name: punctuation.definition.comment.d
- include: "#comment-line"
- include: "#comment-block"
- include: "#comment-block-nested"
- include: "#string-literal"
- name: comment.line.special.d
  match: '#line\s+(\S+)\s+("[^"]*")\s*$'
  captures:
    '1':
      name: constant.numeric.integer.d
    '2':
      name: string.quoted.double.d
- name: constant.language.boolean.d
  match: "\\b(true|false)\\b"
- name: constant.language.null.d
  match: "\\bnull\\b"
- name: constant.language.d
  match: "\\b__(DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__\\b"
- include: "#integer-literal"
- name: constant.numeric.hex.float.d
  match: "\\b0[xX]([\\da-fA-F_]+)?\\.?([\\da-fA-F_]+)?[pP][+-]?[\\d_]+([fF]|L)?i?\\b"
- name: constant.numeric.float.d
  match: "(\\b\\d[\\d_]*)?(\\.|\\b)\\d[\\d_]*(?!\\.)([eE][+-]?\\d[\\d_]*)?[fFL]?i?\\b"
- name: constant.numeric.float.d
  match: "\\b\\d[\\d_]*\\."
- name: storage.type.function.arrow.d
  match: "=>"
- match: "^\\s*\\b(body|do|in|out)\\b(?=\\s*($|\\{|\\())"
  captures:
    '1':
      name: keyword.control.d
- name: keyword.control.branch.d
  match: "\\b(break|case|continue|default|goto|(final\\s+)?switch|version)\\b"
- name: keyword.control.conditional.d
  match: "\\b(else|(static\\s+)?if)\\b"
- name: keyword.control.exception.d
  match: "\\b(catch|finally|throw|try)\\b"
- name: keyword.control.import.d
  match: "\\bimport\\b"
- name: keyword.control.loop.d
  match: "\\b(do|for|foreach(_reverse)?|while)\\b"
- name: keyword.control.d
  match: "\\b(asm|debug|invariant|return|synchronized|unittest|with)\\b"
- name: keyword.other.d
  match: "\\b((static\\s+)?assert|cast|in|is|macro|mixin|new|out|pragma|typeid|typeof|__traits)\\b"
- name: keyword.other.special.d
  match: "\\b__(FILE|FILE_FULL_PATH|MODULE|LINE|FUNCTION|PRETTY_FUNCTION)__\\b"
- include: "#operator"
- name: punctuation.accessor.d
  match: "\\."
- name: storage.modifier.attribute.d
  contentName: meta.parens.d
  begin: "(@)\\s*\\w*\\s*(\\()"
  end: "\\)"
  beginCaptures:
    '1':
      name: punctuation.definition.keyword.d
    '2':
      name: punctuation.section.parens.begin.d
  endCaptures:
    '0':
      name: punctuation.section.parens.end.d
  patterns:
  - include: "$self"
- name: storage.modifier.attribute.d
  match: "(@)(?:(disable|nogc|property|safe|system|trusted)|\\w+)\\b"
  captures:
    '1':
      name: punctuation.definition.keyword.d
    '2':
      name: support.constant.attribute.d
- contentName: meta.parens.d
  begin: "\\b(package)\\s*(\\()"
  end: "\\)"
  beginCaptures:
    '1':
      name: storage.modifier.visibility.d
    '2':
      name: punctuation.section.parens.begin.d
  endCaptures:
    '0':
      name: punctuation.section.parens.end.d
  patterns:
  - name: entity.name.namespace.d
    match: "[\\w.]+"
- name: storage.modifier.visibility.d
  match: "\\b(export|package|private|protected|public)\\b"
- name: storage.modifier.d
  match: "\\b(abstract|alias|align|auto|const|deprecated|extern|final|immutable|inout|lazy|nothrow|override|pure|ref|scope|shared|static|volatile|__gshared)\\b"
- name: storage.type.character.d
  match: "\\b(char|dchar|wchar)\\b"
- name: storage.type.integer.d
  match: "\\b(byte|cent|int|long|short|size_t|ptrdiff_t|ubyte|ucent|uint|ulong|ushort)\\b"
- name: storage.type.float.d
  match: "\\b(cdouble|cfloat|creal|double|float|idouble|ifloat|ireal|real)\\b"
- name: storage.type.string.d
  match: "(?<!\\.)\\b(dstring|string|wstring)\\b"
- name: storage.type.d
  match: "\\b(bool|class|delegate|enum|function|interface|module|struct|template|union|void|__vector)\\b"
- name: invalid.deprecated.d
  match: "\\b(delete|typedef)\\b"
- name: variable.language.d
  match: "\\b(super|this|__parameters)\\b"
- name: support.class.d
  match: "\\b(Error|Exception|Interface|Object|OffsetTypeInfo|RTInfo|Throwable|TypeInfo|TypeInfo_Class)\\b"
- match: "\\b([\\p{Ll}\\p{Lo}_]\\w*)\\s*(!)(?!in\\b|is\\b|=)"
  captures:
    '1':
      name: entity.name.function.d
      patterns:
      - include: "#function-support"
    '2':
      name: punctuation.definition.generic.begin.d
- match: "(?<!\\w!)\\b([\\p{Ll}\\p{Lo}_]\\w*)\\s*(?=\\()"
  captures:
    '1':
      name: entity.name.function.d
      patterns:
      - include: "#function-support"
- match: "(?<=[^.]\\.)\\s*(?:(alignof|assumeSafeAppend|capacity|classinfo|clear|dig|dup|epsilon|hashOf|idup|im|infinity|init|keys|mangleof|mant_dig|max|max(?:_10)?_exp|min|min(?:_10)?_exp|min_normal|nan|offsetof|ptr|re|rehash|reserve|sizeof|stringof|tupleof|values|__vptr|__monitor)|([\\p{L}_]\\w*))\\b"
  captures:
    '1':
      name: support.constant.property.d
    '2':
      name: variable.other.member.d
- name: constant.other.d
  match: "\\b[\\p{Lu}\\p{Lo}][\\p{Lu}\\p{Lo}0-9_]*\\b"
- name: entity.name.type.d
  match: "\\b[\\p{Lu}\\p{Lo}]\\w*\\b"
- name: punctuation.separator.d
  match: ","
- name: punctuation.terminator.d
  match: ";"
- include: "#.util-count-braces"
- include: "#.util-count-brackets"
- include: "#.util-count-parens"
repository:
  import-support:
    patterns:
    - name: support.type.module.d
      match: "\\b(etc\\.c\\.(curl|(odbc\\.(sql|sqlext|sqltypes|sqlucode)|sqlite3|zlib))|core\\.(atomic|attribute|bitop|checkint|cpuid|demangle|exception|math|memory|runtime|simd|stdc\\.(assert_|complex|ctype|errno|fenv|float_|inttypes|limits|locale|math|signal|stdarg|stddef|stdint|stdio|stdlib|string|tgmath|time|wchar_|wctype)|stdcpp\\.(exception|typeinfo)|sync\\.(barrier|condition|config|exception|mutex|rwmutex|semaphore)|thread|time|vararg)|std\\.(algorithm(\\.(comparison|iteration|mutation|searching|setops|sorting))?|array|ascii|base64|bigint|bitmanip|compiler|complex|concurrency|container(\\.(array|binaryheap|dlist|rbtree|slist|util))?|conv|csv|datetime(\\.(date|interval|stopwatch|systime|timezone))?|demangle|digest\\.(crc|digest|hmac|md|murmurhash|ripemd|sha)|encoding|exception|file|format|functional|getopt|json|math|mathspecial|meta|mmfile|net\\.(curl|isemail)|numeric|outbuffer|parallelism|path|process|random|range(\\.(interfaces|primitives))?|regex|signals|socket|stdint|stdio|string|system|traits|typecons|uni|uri|utf|uuid|variant|windows\\.(charset|syserror)|xml|zip|zlib))\\b"
  comment-line:
    name: comment.line.double-slash.d
    match: "(//).*"
    captures:
      '1':
        name: punctuation.definition.comment.d
  comment-block:
    name: comment.block.d
    begin: "/\\*"
    end: "\\*/"
    beginCaptures:
      '0':
        name: punctuation.definition.comment.d
    endCaptures:
      '0':
        name: punctuation.definition.comment.d
  comment-block-nested:
    name: comment.block.nested.d
    begin: "/\\+"
    end: "\\+/"
    beginCaptures:
      '0':
        name: punctuation.definition.comment.d
    endCaptures:
      '0':
        name: punctuation.definition.comment.d
    patterns:
    - include: "#comment-block-nested"
  string-literal:
    patterns:
    - name: string.quoted.single.d
      match: "(')(?:[^\\\\]|(?:\\\\([^']{1,10}|')))(')"
      captures:
        '0':
          patterns:
          - include: "#string-escaped-char"
        '1':
          name: punctuation.definition.string.begin.d
        '2':
          name: punctuation.definition.string.end.d
    - name: string.quoted.double.delimited.d
      begin: q"\[
      end: \]"
    - name: string.quoted.double.delimited.d
      begin: q"\(
      end: \)"
    - name: string.quoted.double.delimited.d
      begin: q"<
      end: '>"'
    - name: string.quoted.double.delimited.d
      begin: q"\{
      end: \}"
    - name: string.quoted.double.delimited.d
      begin: q"(\w+)$
      end: ^\s*\1"
    - name: string.quoted.double.hex.d
      contentName: invalid.deprecated.hex.d
      begin: x"
      end: "\"(c|d|w)?"
      patterns:
      - name: invalid.illegal.d
        match: "[^\\s\\da-fA-F]"
    - name: string.quoted.double.raw.d
      begin: r"
      end: "\"(c|d|w)?"
    - name: string.quoted.double.d
      begin: "\""
      end: "\"(c|d|w)?"
      patterns:
      - include: "#string-escaped-char"
    - name: string.quoted.other.backtick.raw.d
      begin: "`"
      end: "`(c|d|w)?"
    - name: string.unquoted.token.d
      begin: q{
      end: "}"
      patterns:
      - include: "$self"
  string-escaped-char:
    name: constant.character.escape.d
    match: \\(['"?\\0abnfrtv]|x[\da-fA-F]{2}|[0-3]?[0-7]{1,2}|u[\da-fA-F]{4}|U[\da-fA-F]{8}|&[\p{L}]{1,8};)
  integer-literal:
    patterns:
    - name: constant.numeric.binary.integer.d
      match: "\\b0[bB][01_]+(L?[uU]?|[uU]L)?\\b"
    - name: constant.numeric.hex.integer.d
      match: "\\b0[xX][\\da-fA-F_]+(L?[uU]?|[uU]L)?(?!\\s*(\\.|[pPfF]))\\b"
    - name: constant.numeric.integer.d
      match: "\\b\\d[\\d_]*(L?[uU]?|[uU]L)?(?!\\s*(\\.|[eEfF]))\\b"
  operator:
    patterns:
    - name: keyword.operator.arithmetic.d
      match: "\\+|-|\\*|/|~|\\^|\\^\\^"
    - name: keyword.operator.assignment.d
      match: "(\\+|-|\\*|/|~|\\^|\\^\\^)?="
    - name: keyword.operator.shift.d
      match: "<<|>>>?"
    - name: keyword.operator.comparison.d
      match: "==|!=|(<|>)=?|<>"
    - name: keyword.operator.logical.d
      match: "!|&&|\\|\\|"
    - name: keyword.operator.bitwise.d
      match: "&|\\|"
    - name: keyword.operator.ternary.d
      match: "\\?|:"
    - name: keyword.operator.variadic.d
      match: "\\.\\.\\."
    - name: keyword.operator.slice.d
      match: "\\.\\."
  function-support:
    name: support.function.d
    match: "\\b(destroy|factory|opAssign|opBinary|opBinaryRight|opCall|opCmp|opDispatch|opDollar|opEquals|opIndex|opIndexAssign|opIndexOpAssign|opIndexUnary|opOpAssign|opSlice|opUnary|toHash|toString)\\b"
  inline-assembly:
    patterns:
    - name: keyword.other.d.asm
      match: "\\b(align|even|naked|offsetof|seg)\\b"
    - name: storage.type.d.asm
      match: "\\b(near|far|byte|short|int|word|dword|qword|float|double|real)\\s+ptr\\b"
    - name: variable.language.register.d.asm
      match: "\\bST\\([0-7]\\)"
    - name: variable.language.register.d.asm
      match: "\\b(AL|AH|AX|EAX|BL|BH|BX|EBX|CL|CH|CX|ECX|DL|DH|DX|EDX|BP|EBP|SP|ESP|DI|EDI|SI|ESI|ES|CS|SS|DS|GS|FS|CR[02-4]|DR[0-367]|TR[3-7]|ST|MM[0-7]|(X|Y)MM([0-9]|1[0-5])|RAX|RBX|RCX|RDX|BPL|RBP|SPL|RSP|DIL|RDI|SIL|RSI|R([89]|1[0-5])(B|W|D)?)\\b"
    - name: variable.language.d.asm
      match: "\\b(this|__LOCAL_SIZE|\\$)\\b"
    - name: entity.name.function.d.asm
      match: "\\b(aaa|aad|aam|aas|adc|add|addpd|addps|addsd|addss|and|andnpd|andnps|andpd|andps|arpl|bound|bsf|bsr|bswap|bt|btc|btr|bts|call|cbw|cdq|clc|cld|clflush|cli|clts|cmc|cmova|cmovae|cmovb|cmovbe|cmovc|cmove|cmovg|cmovge|cmovl|cmovle|cmovna|cmovnae|cmovnb|cmovnbe|cmovnc|cmovne|cmovng|cmovnge|cmovnl|cmovnle|cmovno|cmovnp|cmovns|cmovnz|cmovo|cmovp|cmovpe|cmovpo|cmovs|cmovz|cmp|cmppd|cmpps|cmps|cmpsb|cmpsd|cmpss|cmpsw|cmpxchg|cmpxchg8b|cmpxchg16b|comisd|comiss|cpuid|cvtdq2pd|cvtdq2ps|cvtpd2dq|cvtpd2pi|cvtpd2ps|cvtpi2pd|cvtpi2ps|cvtps2dq|cvtps2pd|cvtps2pi|cvtsd2si|cvtsd2ss|cvtsi2sd|cvtsi2ss|cvtss2sd|cvtss2si|cvttpd2dq|cvttpd2pi|cvttps2dq|cvttps2pi|cvttsd2si|cvttss2si|cwd|cwde|da|daa|das|db|dd|de|dec|df|di|div|divpd|divps|divsd|divss|dl|dq|ds|dt|dw|emms|enter|f2xm1|fabs|fadd|faddp|fbld|fbstp|fchs|fclex|fcmovb|fcmovbe|fcmove|fcmovnb|fcmovnbe|fcmovne|fcmovnu|fcmovu|fcom|fcomi|fcomip|fcomp|fcompp|fcos|fdecstp|fdisi|fdiv|fdivp|fdivr|fdivrp|feni|ffree|fiadd|ficom|ficomp|fidiv|fidivr|fild|fimul|fincstp|finit|fist|fistp|fisub|fisubr|fld|fld1|fldcw|fldenv|fldl2e|fldl2t|fldlg2|fldln2|fldpi|fldz|fmul|fmulp|fnclex|fndisi|fneni|fninit|fnop|fnsave|fnstcw|fnstenv|fnstsw|fpatan|fprem|fprem1|fptan|frndint|frstor|fsave|fscale|fsetpm|fsin|fsincos|fsqrt|fst|fstcw|fstenv|fstp|fstsw|fsub|fsubp|fsubr|fsubrp|ftst|fucom|fucomi|fucomip|fucomp|fucompp|fwait|fxam|fxch|fxrstor|fxsave|fxtract|fyl2x|fyl2xp1|hlt|idiv|imul|in|inc|ins|insb|insd|insw|int|into|invd|invlpg|iret|iretd|iretq|ja|jae|jb|jbe|jc|jcxz|je|jecxz|jg|jge|jl|jle|jmp|jna|jnae|jnb|jnbe|jnc|jne|jng|jnge|jnl|jnle|jno|jnp|jns|jnz|jo|jp|jpe|jpo|js|jz|lahf|lar|ldmxcsr|lds|lea|leave|les|lfence|lfs|lgdt|lgs|lidt|lldt|lmsw|lock|lods|lodsb|lodsd|lodsw|loop|loope|loopne|loopnz|loopz|lsl|lss|ltr|maskmovdqu|maskmovq|maxpd|maxps|maxsd|maxss|mfence|minpd|minps|minsd|minss|mov|movapd|movaps|movd|movdq2q|movdqa|movdqu|movhlps|movhpd|movhps|movlhps|movlpd|movlps|movmskpd|movmskps|movntdq|movnti|movntpd|movntps|movntq|movq|movq2dq|movs|movsb|movsd|movss|movsw|movsx|movupd|movups|movzx|mul|mulpd|mulps|mulsd|mulss|neg|nop|not|or|orpd|orps|out|outs|outsb|outsd|outsw|packssdw|packsswb|packuswb|paddb|paddd|paddq|paddsb|paddsw|paddusb|paddusw|paddw|pand|pandn|pavgb|pavgw|pcmpeqb|pcmpeqd|pcmpeqw|pcmpgtb|pcmpgtd|pcmpgtw|pextrw|pinsrw|pmaddwd|pmaxsw|pmaxub|pminsw|pminub|pmovmskb|pmulhuw|pmulhw|pmullw|pmuludq|pop|popa|popad|popf|popfd|por|prefetchnta|prefetcht0|prefetcht1|prefetcht2|psadbw|pshufd|pshufhw|pshuflw|pshufw|pslld|pslldq|psllq|psllw|psrad|psraw|psrld|psrldq|psrlq|psrlw|psubb|psubd|psubq|psubsb|psubsw|psubusb|psubusw|psubw|punpckhbw|punpckhdq|punpckhqdq|punpckhwd|punpcklbw|punpckldq|punpcklqdq|punpcklwd|push|pusha|pushad|pushf|pushfd|pxor|rcl|rcpps|rcpss|rcr|rdmsr|rdpmc|rdtsc|rep|repe|repne|repnz|repz|ret|retf|rol|ror|rsm|rsqrtps|rsqrtss|sahf|sal|sar|sbb|scas|scasb|scasd|scasw|seta|setae|setb|setbe|setc|sete|setg|setge|setl|setle|setna|setnae|setnb|setnbe|setnc|setne|setng|setnge|setnl|setnle|setno|setnp|setns|setnz|seto|setp|setpe|setpo|sets|setz|sfence|sgdt|shl|shld|shr|shrd|shufpd|shufps|sidt|sldt|smsw|sqrtpd|sqrtps|sqrtsd|sqrtss|stc|std|sti|stmxcsr|stos|stosb|stosd|stosw|str|sub|subpd|subps|subsd|subss|syscall|sysenter|sysexit|sysret|test|ucomisd|ucomiss|ud2|unpckhpd|unpckhps|unpcklpd|unpcklps|verr|verw|wait|wbinvd|wrmsr|xadd|xchg|xlat|xlatb|xor|xorpd|xorps)\\b"
    - name: entity.name.function.d.asm
      match: "\\b(addsubpd|addsubps|fisttp|haddpd|haddps|hsubpd|hsubps|lddqu|monitor|movddup|movshdup|movsldup|mwait)\\b"
    - name: entity.name.function.d.asm
      match: "\\b(pavgusb|pf2id|pfacc|pfadd|pfcmpeq|pfcmpge|pfcmpgt|pfmax|pfmin|pfmul|pfnacc|pfpnacc|pfrcp|pfrcpit1|pfrcpit2|pfrsqit1|pfrsqrt|pfsub|pfsubr|pi2fd|pmulhrw|pswapd)\\b"
    - include: "#string-literal"
    - include: "#integer-literal"
    - include: "#comment-line"
    - include: "#comment-block"
    - include: "#comment-block-nested"
    - include: "#operator"
    - name: punctuation.terminator.d.asm
      match: ";"
  ".util-count-braces":
    contentName: meta.block.d
    begin: "\\{"
    end: "\\}"
    beginCaptures:
      '0':
        name: punctuation.section.block.begin.d
    endCaptures:
      '0':
        name: punctuation.section.block.end.d
    patterns:
    - include: "$self"
  ".util-count-brackets":
    contentName: meta.brackets.d
    begin: "\\["
    end: "\\]"
    beginCaptures:
      '0':
        name: punctuation.section.brackets.begin.d
    endCaptures:
      '0':
        name: punctuation.section.brackets.end.d
    patterns:
    - name: keyword.operator.length.d
      match: "\\$"
    - name: punctuation.separator.d
      match: ":"
    - include: "$self"
  ".util-count-parens":
    contentName: meta.parens.d
    begin: "\\("
    end: "\\)"
    beginCaptures:
      '0':
        name: punctuation.section.parens.begin.d
    endCaptures:
      '0':
        name: punctuation.section.parens.end.d
    patterns:
    - name: punctuation.separator.d
      match: ";"
    - include: "$self"
